package dev.masterflomaster1.jwa.common;

import org.junit.jupiter.api.Test;

import java.util.Arrays;
import java.util.List;

import static org.junit.jupiter.api.Assertions.*;

@SuppressWarnings("SpellCheckingInspection")
class RightsTest {

    @Test
    void shouldContainAllValues() {
        List<String> expectedValues = Arrays.asList(
                "abusefilter-access-protected-vars",
                "abusefilter-bypass-blocked-external-domains",
                "abusefilter-hidden-log",
                "abusefilter-hide-log",
                "abusefilter-log",
                "abusefilter-log-detail",
                "abusefilter-log-private",
                "abusefilter-modify",
                "abusefilter-modify-blocked-external-domains",
                "abusefilter-modify-global",
                "abusefilter-modify-restricted",
                "abusefilter-privatedetails",
                "abusefilter-privatedetails-log",
                "abusefilter-revert",
                "abusefilter-view",
                "abusefilter-view-private",
                "apihighlimits",
                "applychangetags",
                "autoconfirmed",
                "autocreateaccount",
                "autopatrol",
                "autoreview",
                "autoreviewrestore",
                "badcaptcha",
                "badoath",
                "bigdelete",
                "block",
                "blockemail",
                "bot",
                "browsearchive",
                "centralauth-createlocal",
                "centralauth-lock",
                "centralauth-merge",
                "centralauth-rename",
                "centralauth-suppress",
                "centralauth-unmerge",
                "changeemail",
                "changetags",
                "checkuser",
                "checkuser-log",
                "checkuser-temporary-account",
                "checkuser-temporary-account-log",
                "checkuser-temporary-account-no-preference",
                "collectionsaveascommunitypage",
                "collectionsaveasuserpage",
                "confirmemail",
                "createaccount",
                "createpage",
                "createpagemainns",
                "createtalk",
                "delete",
                "delete-redirect",
                "deletechangetags",
                "deletedhistory",
                "deletedtext",
                "deletelogentry",
                "deleterevision",
                "echo-create",
                "edit",
                "editautopatrolprotected",
                "editautoreviewprotected",
                "editcontentmodel",
                "editeditorprotected",
                "editextendedsemiprotected",
                "editinterface",
                "editmyoptions",
                "editmyprivateinfo",
                "editmyusercss",
                "editmyuserjs",
                "editmyuserjson",
                "editmyuserjsredirect",
                "editmywatchlist",
                "editprotected",
                "editsemiprotected",
                "editsitecss",
                "editsitejs",
                "editsitejson",
                "edittrustedprotected",
                "editusercss",
                "edituserjs",
                "edituserjson",
                "enrollasmentor",
                "extendedconfirmed",
                "flow-create-board",
                "flow-delete",
                "flow-edit-post",
                "flow-hide",
                "flow-suppress",
                "globalblock",
                "globalblock-exempt",
                "globalblock-whitelist",
                "globalgroupmembership",
                "globalgrouppermissions",
                "growthexperiments-apiqueryimagesuggestiondata",
                "growthexperimentsuserimpacthandler",
                "growthmentordashboardupdatedata",
                "hideuser",
                "import",
                "importupload",
                "ipblock-exempt",
                "ipinfo",
                "ipinfo-view-basic",
                "ipinfo-view-full",
                "ipinfo-view-log",
                "linkpurge",
                "mailpassword",
                "manage-all-push-subscriptions",
                "managechangetags",
                "managementors",
                "markbotedits",
                "massmessage",
                "mergehistory",
                "minoredit",
                "move",
                "move-categorypages",
                "move-rootuserpages",
                "move-subpages",
                "movefile",
                "movestable",
                "mwoauthmanageconsumer",
                "mwoauthmanagemygrants",
                "mwoauthproposeconsumer",
                "mwoauthsuppress",
                "mwoauthupdateownconsumer",
                "mwoauthviewprivate",
                "mwoauthviewsuppressed",
                "newsletter-create",
                "newsletter-delete",
                "newsletter-manage",
                "newsletter-restore",
                "nominornewtalk",
                "noratelimit",
                "nuke",
                "oathauth-api-all",
                "oathauth-disable-for-user",
                "oathauth-enable",
                "oathauth-verify-user",
                "oathauth-view-log",
                "override-antispoof",
                "override-export-depth",
                "pagelang",
                "pagetriage-copyvio",
                "pagetriage-mark-action",
                "pagetriage-tagging-action",
                "patrol",
                "patrolmarks",
                "protect",
                "purge",
                "read",
                "renameuser",
                "renderfile",
                "renderfile-nonstandard",
                "reupload",
                "reupload-own",
                "reupload-shared",
                "review",
                "rollback",
                "sboverride",
                "securepoll-create-poll",
                "securepoll-view-voter-pii",
                "sendemail",
                "setmentor",
                "sfsblock-bypass",
                "siteadmin",
                "skipcaptcha",
                "spamblacklistlog",
                "stablesettings",
                "stashbasehtml",
                "stashedit",
                "suppressionlog",
                "suppressredirect",
                "suppressrevision",
                "tboverride",
                "tboverride-account",
                "templateeditor",
                "thanks-notification",
                "titleblacklistlog",
                "torunblocked",
                "transcode-reset",
                "transcode-status",
                "unblockself",
                "undelete",
                "unreviewedpages",
                "unwatchedpages",
                "upload",
                "upload_by_url",
                "urlshortcode",
                "urlshortener-create-url",
                "urlshortener-manage-url",
                "urlshortener-view-log",
                "userrights",
                "userrights-interwiki",
                "validate",
                "viewdeletedfile",
                "viewmyprivateinfo",
                "viewmywatchlist",
                "viewsuppressed",
                "vipsscaler-test"
        );

        List<String> actualValues = Arrays.stream(Rights.values())
                .map(Rights::getValue)
                .toList();

        assertTrue(expectedValues.containsAll(actualValues), "Enum values do not match the provided list!");
        assertTrue(actualValues.containsAll(expectedValues), "Provided list contains values not in the enum!");
    }

}